{"uid":"470e2c136def8d6d","name":"test_Login","fullName":"test_allure_screenshot_for_pass_and_fail.TestHRM#test_Login","historyId":"0010b23d14db81788397695ef158f20d","time":{"start":1682412480914,"stop":1682412495611,"duration":14697},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <allurereportsdemo.test_allure_screenshot_for_pass_and_fail.TestHRM object at 0x00000287B5214B90>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_Login(self):\n        try:\n            self.driver = webdriver.Chrome(\"C:\\\\webdriver\\\\chromedriver_win32 (1)\\\\chromedriver.exe\")\n            self.driver.get(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\")\n            self.driver.maximize_window()\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//input[@name='username']\").send_keys(\"Admin\")\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//input[@name='password']\").send_keys(\"admin123\")\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//button[@type='submit']\").click()\n            time.sleep(2)\n            act_title=self.driver.title\n            print(act_title)\n    \n            if act_title==\"OrangeHRM123\":\n                # try:\n                #     self.driver.get_screenshot_as_file(\"screenshot.png\")\n                # except Exception as e:\n                #     print(f\"Error capturing screenshot: {str(e)}\")\n    \n                self.driver.close()\n                assert True\n            else:\n    \n                self.driver.get_screenshot_as_file(\"screenshot.png\")\n                allure.attach.file(\"screenshot.png\", name=\"password input \", attachment_type=allure.attachment_type.PNG)\n                self.driver.close()\n>               assert False\nE               assert False\n\n..\\test_allure_screenshot_for_pass_and_fail.py:70: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <allurereportsdemo.test_allure_screenshot_for_pass_and_fail.TestHRM object at 0x00000287B5214B90>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_Login(self):\n        try:\n            self.driver = webdriver.Chrome(\"C:\\\\webdriver\\\\chromedriver_win32 (1)\\\\chromedriver.exe\")\n            self.driver.get(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\")\n            self.driver.maximize_window()\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//input[@name='username']\").send_keys(\"Admin\")\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//input[@name='password']\").send_keys(\"admin123\")\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//button[@type='submit']\").click()\n            time.sleep(2)\n            act_title=self.driver.title\n            print(act_title)\n    \n            if act_title==\"OrangeHRM123\":\n                # try:\n                #     self.driver.get_screenshot_as_file(\"screenshot.png\")\n                # except Exception as e:\n                #     print(f\"Error capturing screenshot: {str(e)}\")\n    \n                self.driver.close()\n                assert True\n            else:\n    \n                self.driver.get_screenshot_as_file(\"screenshot.png\")\n                allure.attach.file(\"screenshot.png\", name=\"password input \", attachment_type=allure.attachment_type.PNG)\n                self.driver.close()\n                assert False\n        except Exception as error:\n            print(error)\n>           assert False\nE           assert False\n\n..\\test_allure_screenshot_for_pass_and_fail.py:73: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1682412453509,"stop":1682412453509,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"_verify_url","time":{"start":1682412453509,"stop":1682412453510,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"sensitive_url","time":{"start":1682412453510,"stop":1682412453510,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"_skip_sensitive","time":{"start":1682412480914,"stop":1682412480914,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <allurereportsdemo.test_allure_screenshot_for_pass_and_fail.TestHRM object at 0x00000287B5214B90>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_Login(self):\n        try:\n            self.driver = webdriver.Chrome(\"C:\\\\webdriver\\\\chromedriver_win32 (1)\\\\chromedriver.exe\")\n            self.driver.get(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\")\n            self.driver.maximize_window()\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//input[@name='username']\").send_keys(\"Admin\")\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//input[@name='password']\").send_keys(\"admin123\")\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//button[@type='submit']\").click()\n            time.sleep(2)\n            act_title=self.driver.title\n            print(act_title)\n    \n            if act_title==\"OrangeHRM123\":\n                # try:\n                #     self.driver.get_screenshot_as_file(\"screenshot.png\")\n                # except Exception as e:\n                #     print(f\"Error capturing screenshot: {str(e)}\")\n    \n                self.driver.close()\n                assert True\n            else:\n    \n                self.driver.get_screenshot_as_file(\"screenshot.png\")\n                allure.attach.file(\"screenshot.png\", name=\"password input \", attachment_type=allure.attachment_type.PNG)\n                self.driver.close()\n>               assert False\nE               assert False\n\n..\\test_allure_screenshot_for_pass_and_fail.py:70: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <allurereportsdemo.test_allure_screenshot_for_pass_and_fail.TestHRM object at 0x00000287B5214B90>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_Login(self):\n        try:\n            self.driver = webdriver.Chrome(\"C:\\\\webdriver\\\\chromedriver_win32 (1)\\\\chromedriver.exe\")\n            self.driver.get(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\")\n            self.driver.maximize_window()\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//input[@name='username']\").send_keys(\"Admin\")\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//input[@name='password']\").send_keys(\"admin123\")\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, \"//button[@type='submit']\").click()\n            time.sleep(2)\n            act_title=self.driver.title\n            print(act_title)\n    \n            if act_title==\"OrangeHRM123\":\n                # try:\n                #     self.driver.get_screenshot_as_file(\"screenshot.png\")\n                # except Exception as e:\n                #     print(f\"Error capturing screenshot: {str(e)}\")\n    \n                self.driver.close()\n                assert True\n            else:\n    \n                self.driver.get_screenshot_as_file(\"screenshot.png\")\n                allure.attach.file(\"screenshot.png\", name=\"password input \", attachment_type=allure.attachment_type.PNG)\n                self.driver.close()\n                assert False\n        except Exception as error:\n            print(error)\n>           assert False\nE           assert False\n\n..\\test_allure_screenshot_for_pass_and_fail.py:73: AssertionError","steps":[],"attachments":[{"uid":"2904f1e418f98db2","name":"password input ","source":"2904f1e418f98db2.png","type":"image/png","size":160882}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"severity","value":"blocker"},{"name":"suite","value":"test_allure_screenshot_for_pass_and_fail"},{"name":"subSuite","value":"TestHRM"},{"name":"host","value":"LAPTOP-30GKFPTR"},{"name":"thread","value":"13072-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_allure_screenshot_for_pass_and_fail"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"470e2c136def8d6d.json","parameterValues":[]}